---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bjw-s
  namespace: flux-system
spec:
  interval: 2h
  url: https://bjw-s.github.io/helm-charts

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyvr-config-v1
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn-configs

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyvr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
        annotations:
          reloader.stakater.com/auto: "true"
        containers: 
          main:
            image:
              repository: ghcr.io/alyti/jellyvr
              tag: latest
            env:
              TZ: ${TZ}
              JELLYFIN_HOST: "http://jellyfin:8096"
              JELLYFIN_REMOTE_HOST: "https://jellyfin.${DEV_DOMAIN}"
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 512Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jellyvr"
          gethomepage.dev/group: "Media"
          gethomepage.dev/description: "VR Proxy for Jellyfin"
        hosts:
          - host: &host "{{ .Release.Name }}.${DEV_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: jellyvr-config-v1
        globalMounts:
          - path: /data
